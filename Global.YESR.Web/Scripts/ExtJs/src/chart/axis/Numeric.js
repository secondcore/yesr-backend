Ext.define("Ext.chart.axis.Numeric",{extend:"Ext.chart.axis.Axis",alternateClassName:"Ext.chart.NumericAxis",type:"numeric",alias:"axis.numeric",uses:["Ext.data.Store"],constructor:function(c){var d=this,a=!!(c.label&&c.label.renderer),b;d.callParent([c]);b=d.label;if(c.constrain==null){d.constrain=(c.minimum!=null&&c.maximum!=null)}if(!a){b.renderer=function(e){return d.roundToDecimal(e,d.decimals)}}},roundToDecimal:function(a,c){var b=Math.pow(10,c||0);return Math.floor(a*b)/b},minimum:NaN,maximum:NaN,constrain:true,decimals:2,scale:"linear",doConstrain:function(){var t=this,c=t.chart.store,h=c.data.items,s,v,b,f=t.chart.series.items,j=t.fields,e=j.length,g=t.getRange(),m=g.min,p=g.max,q,n,a=[],r=false,k,u=[],o;for(q=0,n=f.length;q<n;q++){a[q]=f[q].__excludes;r=r||f[q].stacked}for(s=0,v=h.length;s<v;s++){o=true;b=h[s];for(q=0;q<e;q++){o=true;if(a[q]){continue}k=b.get(j[q]);if(!r&&+k<+m){o=false;break}if(!r&&+k>+p){o=false;break}}if(o){u.push(b)}}t.chart.substore=Ext.create("Ext.data.Store",{model:c.model,data:u})},position:"left",adjustMaximumByMajorUnit:false,adjustMinimumByMajorUnit:false,processView:function(){var a=this,b=a.constrain;if(b){a.doConstrain()}},applyData:function(){this.callParent();return this.calcEnds()}});