Ext.define("Ext.layout.component.field.Trigger",{alias:"layout.triggerfield",extend:"Ext.layout.component.field.Field",type:"triggerfield",beginLayout:function(d){var c=this,a=c.owner,b;d.triggerWrap=d.getEl("triggerWrap");c.callParent(arguments);b=a.getTriggerStateFlags();if(b!=a.lastTriggerStateFlags){a.lastTriggerStateFlags=b;c.updateEditState()}},beginLayoutFixed:function(e,b,f){var c=this,a=e.target,d=c.ieInputWidthAdjustment,g="100%";c.callParent(arguments);a.inputCell.setStyle("width","100%");if(d){a.inputCell.setStyle("padding-right",d+"px");if(f==="px"){g=b-d-a.getTriggerWidth()}}a.inputEl.setStyle("width",g);a.triggerWrap.setStyle("width",b+f);a.triggerWrap.setStyle("table-layout","fixed")},beginLayoutShrinkWrap:function(b){var a=b.target,c="";this.callParent(arguments);a.triggerWrap.setStyle("width",c);a.inputCell.setStyle("width",c);a.inputEl.setStyle("width",c);a.triggerWrap.setStyle("table-layout","auto")},getTextWidth:function(){var b=this,a=b.owner,d=a.inputEl,c;c=(d.dom.value||(a.hasFocus?"":a.emptyText)||"")+a.growAppend;return d.getTextWidth(c)},measureContentWidth:function(g){var f=this,b=f.owner,e=f.callParent(arguments),h=g.inputContext,d,a,c;if(b.grow&&!g.state.growHandled){d=f.getTextWidth()+g.inputContext.getFrameInfo().width;a=b.growMax;c=Math.min(a,e);a=Math.max(b.growMin,a,c);d=Ext.Number.constrain(d,b.growMin,a);h.setWidth(d);g.state.growHandled=true;h.domBlock(f,"width");e=NaN}return e},updateEditState:function(){var c=this,a=c.owner,e=a.inputEl,d=Ext.baseCSSPrefix+"trigger-noedit",b,f;if(c.owner.readOnly){e.addCls(d);f=true;b=false}else{if(c.owner.editable){e.removeCls(d);f=false}else{e.addCls(d);f=true}b=!c.owner.hideTrigger}a.triggerCell.setDisplayed(b);e.dom.readOnly=f}});