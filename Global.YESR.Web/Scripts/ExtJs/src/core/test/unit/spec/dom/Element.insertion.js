describe("Ext.Element.insertion",function(){var f=Ext.Element.prototype,d,h,c,a,g,e,b;beforeEach(function(){h=Ext.getBody().createChild({id:"ExtElementHelper",children:[{id:"child1"},{id:"child2"},{id:"child3"}]});a=Ext.getBody().createChild({id:"ExtElementSpanHelper",tag:"span"});d=new Ext.Element(Ext.getDom(h));c=new Ext.Element(Ext.getDom(a));g=Ext.get("child1");e=Ext.get("child2");b=Ext.get("child3")});afterEach(function(){h.remove();a.remove()});describe("appendChild",function(){it("should append the child",function(){expect(d.contains(c)).toBeFalsy();d.appendChild(c);expect(d.contains(c)).toBeTruthy()})});describe("appendTo",function(){it("should append the el to the specified el",function(){expect(c.contains(d)).toBeFalsy();d.appendTo(c);expect(c.contains(d)).toBeTruthy()})});describe("insertBefore",function(){it("should insert the el before the specified el",function(){var i=Ext.getDom(g).parentNode.childNodes,j=Ext.toArray(i);expect(Ext.Array.indexOf(j,Ext.getDom(e))).toEqual(1);e.insertBefore(g);i=Ext.getDom(g).parentNode.childNodes;j=Ext.toArray(i);expect(Ext.Array.indexOf(j,Ext.getDom(e))).toEqual(0)})});describe("insertAfter",function(){it("should insert the el after the specified el",function(){var i=Ext.getDom(g).parentNode.childNodes,j=Ext.toArray(i);expect(Ext.Array.indexOf(j,Ext.getDom(e))).toEqual(1);e.insertAfter(b);i=Ext.getDom(g).parentNode.childNodes;j=Ext.toArray(i);expect(Ext.Array.indexOf(j,Ext.getDom(e))).toEqual(2)})});describe("insertFirst",function(){it("should insert the el into the specified el",function(){var i=Ext.getDom(e).childNodes;expect(i.length).toEqual(0);e.insertFirst(g);i=Ext.getDom(e).childNodes;expect(i.length).toEqual(1)})});describe("insertSibling",function(){describe("when array",function(){describe("after",function(){it("should create each of the elements and add them to the el parent",function(){var i=Ext.getDom(d).childNodes;expect(i.length).toEqual(3);g.insertSibling([{id:"sibling1"},{id:"sibling2"}],"after");i=Ext.getDom(d).childNodes;expect(i.length).toEqual(5)})});describe("before",function(){it("should create each of the elements and add them to the el parent",function(){var i=Ext.getDom(d).childNodes;expect(i.length).toEqual(3);g.insertSibling([{id:"sibling1"},{id:"sibling2"}],"before");i=Ext.getDom(d).childNodes;expect(i.length).toEqual(5)})})});describe("when Ext.Element",function(){describe("after",function(){it("should move the element next to the el",function(){var i=Ext.getDom(d).childNodes;expect(i.length).toEqual(3);g.insertSibling(c,"after");i=Ext.getDom(d).childNodes;expect(i.length).toEqual(4)})});describe("before",function(){it("should move the element next to the el",function(){var i=Ext.getDom(d).childNodes;expect(i.length).toEqual(3);g.insertSibling(c,"before");i=Ext.getDom(d).childNodes;expect(i.length).toEqual(4)})})});describe("other",function(){describe("after",function(){it("should move the element next to the el",function(){var i=Ext.getDom(d).childNodes;expect(i.length).toEqual(3);g.insertSibling({id:"sibling1"},"after");i=Ext.getDom(d).childNodes;expect(i.length).toEqual(4)})});describe("before",function(){it("should move the element next to the el",function(){var i=Ext.getDom(d).childNodes;expect(i.length).toEqual(3);g.insertSibling({id:"sibling1"},"before");i=Ext.getDom(d).childNodes;expect(i.length).toEqual(4)});describe("return dom",function(){it("should move the element next to the el",function(){var i=Ext.getDom(d).childNodes,j;expect(i.length).toEqual(3);j=g.insertSibling({id:"sibling1"},"before",true);i=Ext.getDom(d).childNodes;expect(i.length).toEqual(4);expect(j).toBeDefined()})})})})});describe("replace",function(){it("should replace the passed element with this element",function(){var i=Ext.getDom(d).childNodes;expect(i.length).toEqual(3);g.replace(e);i=Ext.getDom(d).childNodes;expect(i.length).toEqual(2)})});describe("replaceWith",function(){it("should replace this element with the passed element",function(){var i=Ext.getDom(d).childNodes;expect(i.length).toEqual(3);g.replaceWith({tag:"div",cls:"childtestdiv"});expect(g.hasCls("childtestdiv"));i=Ext.getDom(d).childNodes;expect(i.length).toEqual(3)})});describe("createChild",function(){it("should create a child",function(){var i=Ext.getDom(d).childNodes;expect(i.length).toEqual(3);d.createChild({id:"child4"});i=Ext.getDom(d).childNodes;expect(i.length).toEqual(4)});it("should create a child before an el",function(){var i=Ext.getDom(d).childNodes,j=Ext.toArray(i);expect(i.length).toEqual(3);expect(Ext.Array.indexOf(j,Ext.getDom(e))).toEqual(1);d.createChild({id:"child4"},e);i=Ext.getDom(d).childNodes;j=Ext.toArray(i);expect(i.length).toEqual(4);expect(Ext.Array.indexOf(j,Ext.getDom(e))).toEqual(2)})});describe("wrap",function(){it("should wrap the element",function(){var i=Ext.getDom(g).parentNode;g.wrap({cls:"wrapper"});expect(Ext.getDom(g).parentNode.parentNode).toEqual(i);expect(Ext.getDom(g).parentNode.className).toEqual("wrapper")});it("return the el",function(){var i=g.wrap({cls:"wrapper"});expect(Ext.isElement(i)).toBeFalsy()});it("return the dom",function(){var i=g.wrap({cls:"wrapper"},true);expect(Ext.isElement(i)).toBeTruthy()})});describe("insertHtml",function(){describe("beforeBegin",function(){it("should insert the html",function(){expect(Ext.getDom(d).childNodes.length).toEqual(3);g.insertHtml("beforeBegin","<div></div>");expect(Ext.getDom(d).childNodes.length).toEqual(4)})});describe("afterBegin",function(){it("should insert the html",function(){expect(Ext.getDom(g).childNodes.length).toEqual(0);g.insertHtml("afterBegin","<div></div>");expect(Ext.getDom(g).childNodes.length).toEqual(1)})});describe("beforeEnd",function(){it("should insert the html",function(){expect(Ext.getDom(g).childNodes.length).toEqual(0);g.insertHtml("beforeEnd","<div></div>");expect(Ext.getDom(g).childNodes.length).toEqual(1)})});describe("afterEnd",function(){it("should insert the html",function(){expect(Ext.getDom(d).childNodes.length).toEqual(3);g.insertHtml("afterEnd","<div></div>");expect(Ext.getDom(d).childNodes.length).toEqual(4)})});it("should return a dom",function(){var i=g.insertHtml("afterEnd","<div></div>");expect(Ext.isElement(i)).toBeTruthy()});it("should return an el",function(){var i=g.insertHtml("afterEnd","<div></div>",true);expect(Ext.isElement(i)).toBeFalsy()})})},"/src/dom/Element.insertion.js");