describe("Ext.Element.style",function(){var a;beforeEach(function(){a=Ext.getBody().createChild({id:"ExtElementHelper",style:"position:absolute;"})});afterEach(function(){a.remove()});describe("addCls",function(){xit("should add one class",function(){a.addCls("foo");expect(a.dom.className).toEqual("foo")});it("should add two class",function(){a.addCls("foo").addCls("bar");expect(a.dom.className).toEqual("foo bar")});xit("should add one class when given duplicates",function(){a.addCls("foo").addCls("foo");expect(a.dom.className).toEqual("foo")});xit("should add two class at once",function(){a.addCls("foo bar").addCls("bar");expect(a.dom.className).toEqual("foo bar")});xit("should add two class at once and handle duplicates",function(){a.addCls("foo bar").addCls("bar foo");expect(a.dom.className).toEqual("foo bar")})});describe("removeCls",function(){it("should remove nothing if no classes",function(){a.removeCls("bar");expect(a.dom.className).toEqual("")});it("should remove nothing if class is not present",function(){a.dom.className="foo bar";a.removeCls("fbar");expect(a.dom.className).toEqual("foo bar")});it("should remove only class",function(){a.dom.className="foo";a.removeCls("foo");expect(a.dom.className).toEqual("")});it("should remove last class",function(){a.dom.className="foo bar";a.removeCls("bar");expect(a.dom.className).toEqual("foo")});it("should remove first class",function(){a.dom.className="foo bar";a.removeCls("bar");expect(a.dom.className).toEqual("foo")});it("should remove middle class",function(){a.dom.className="foo bar jazz";a.removeCls("bar");expect(a.dom.className).toEqual("foo jazz")});it("should remove multiple classes",function(){a.dom.className="foo bar jazz spud";a.removeCls("jazz bar fff");expect(a.dom.className).toEqual("foo spud")});it("should remove multiple classes sequentially",function(){a.dom.className="foo bar jazz spud";a.removeCls("jazz").removeCls("bar").removeCls("fff");expect(a.dom.className).toEqual("foo spud")})});describe("getStyle",function(){var b,c;beforeEach(function(){c=document.createElement("div");a.appendChild(c);b=new Ext.Element(c)});afterEach(function(){c.parentNode.removeChild(c);b=c=null});describe("border-*-width",function(){Ext.Array.forEach("top right bottom left".split(" "),function(d){it("must report the correct border-"+d+"-width when the border-"+d+'-style is "solid"',function(){c.style.cssText="border:5px solid";expect(b.getStyle("border-"+d+"-width")).toBe("5px")});it("must report 0px for border-"+d+"-width when the border-"+d+'-style is "none"',function(){c.style.cssText="border:5px solid; border-"+d+"-style:none";expect(b.getStyle("border-"+d+"-width")).toBe("0px")})})})})},"/src/dom/Element.style.js");