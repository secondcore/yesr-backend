describe("Ext.ClassManager",function(){var c=Ext.ClassManager,a,b=function(){};beforeEach(function(){c.enableNamespaceParseCache=false;window.My={awesome:{Class:function(){console.log(11)},Class1:function(){console.log(12)},Class2:function(){console.log(13)}},cool:{AnotherClass:function(){console.log(21)},AnotherClass1:function(){console.log(22)},AnotherClass2:function(){console.log(23)}}}});afterEach(function(){if(window.Something){window.Something=undefined}if(window.My){window.My=undefined}if(window.I){window.I=undefined}if(window.Test){window.Test=undefined}try{delete window.Something;delete window.My;delete window.I;delete window.Test}catch(d){}c.enableNamespaceParseCache=true});describe("parseNamespace",function(){it("should return the broken-down namespace",function(){var d=c.parseNamespace("Some.strange.alien.Namespace");expect(d).toEqual([Ext.global,"Some","strange","alien","Namespace"])});it("should return the broken-down namespace with object rewrites",function(){var d=c.parseNamespace("Ext.some.Namespace");expect(d).toEqual([Ext,"some","Namespace"])})});describe("exist",function(){it("should return whether a single class exists",function(){expect(c.isCreated("My.notexisting.Class")).toBe(false);expect(c.isCreated("My.awesome.Class")).toBe(true)})});describe("loader preprocessor",function(){beforeEach(function(){a=function(){}});it("should load and replace string class names with objects",function(){var e={extend:"My.awesome.Class",mixins:{name1:My.cool.AnotherClass,name2:"My.cool.AnotherClass1"}},d={extend:My.awesome.Class,mixins:{name1:My.cool.AnotherClass,name2:My.cool.AnotherClass1}},f;spyOn(Ext.Loader,"require").andCallFake(function(g,h){f=g;h()});Ext.Class.getPreprocessor("loader").fn(a,e,b,b);expect(Ext.Loader.require).toHaveBeenCalled();expect(f).toEqual(["My.awesome.Class","My.cool.AnotherClass1"]);expect(e).toEqual(d)})});describe("create",function(){var f,e,h,g,d;beforeEach(function(){h=c.create("I.am.the.MixinClass1",{config:{mixinConfig:"mixinConfig"},constructor:function(){this.mixinConstructor1Called=true},mixinProperty1:"mixinProperty1",mixinMethod1:function(){this.mixinMethodCalled=true}});g=c.create("I.am.the.MixinClass2",{constructor:function(){this.mixinConstructor2Called=true},mixinProperty2:"mixinProperty2",mixinMethod2:function(){this.mixinMethodCalled=true}});e=c.create("I.am.the.ParentClass",{alias:["parentclass","superclass"],mixins:{mixin1:"I.am.the.MixinClass1"},config:{name:"parentClass",isCool:false,members:{abe:"Abraham Elias",ed:"Ed Spencer"},hobbies:["football","bowling"]},onClassExtended:function(j,i){j.onClassExtendedCalled=true},constructor:function(i){this.initConfig(i);this.parentConstructorCalled=true;this.mixins.mixin1.constructor.apply(this,arguments)},parentProperty:"parentProperty",parentMethod:function(){this.parentMethodCalled=true}});f=c.create("I.am.the.SubClass",{alias:"subclass",extend:"I.am.the.ParentClass",mixins:{mixin1:"I.am.the.MixinClass1",mixin2:"I.am.the.MixinClass2"},config:{name:"subClass",isCool:true,members:{jacky:"Jacky Nguyen",tommy:"Tommy Maintz"},hobbies:["sleeping","eating","movies"],isSpecial:true},constructor:function(){this.subConstrutorCalled=true;this.superclass.constructor.apply(this,arguments);this.mixins.mixin2.constructor.apply(this,arguments)},myOwnMethod:function(){this.myOwnMethodCalled=true}})});it("should create the namespace",function(){expect(I).toBeDefined();expect(I.am).toBeDefined();expect(I.am.the).toBeDefined();expect(I.am.the.SubClass).toBeDefined()});it("should get className",function(){expect(Ext.getClassName(f)).toEqual("I.am.the.SubClass")});describe("addStatics",function(){it("single with name - value arguments",function(){var i=false;f.addStatics({staticMethod:function(){i=true}});expect(f.staticMethod).toBeDefined();f.staticMethod();expect(i).toBeTruthy()});it("multiple with object map argument",function(){f.addStatics({staticProperty:"something",staticMethod:function(){}});expect(f.staticProperty).toEqual("something");expect(f.staticMethod).toBeDefined()})});describe("mixin",function(){it("should have all properties of mixins",function(){var i=new f();expect(i.mixinProperty1).toEqual("mixinProperty1");expect(i.mixinProperty2).toEqual("mixinProperty2");expect(i.mixinMethod1).toBeDefined();expect(i.mixinMethod2).toBeDefined();expect(i.config.mixinConfig).toEqual("mixinConfig")})});describe("config",function(){it("should merge properly",function(){var i=new f();expect(i.config).toEqual({mixinConfig:"mixinConfig",name:"subClass",isCool:true,members:{abe:"Abraham Elias",ed:"Ed Spencer",jacky:"Jacky Nguyen",tommy:"Tommy Maintz"},hobbies:["sleeping","eating","movies"],isSpecial:true})});it("should apply default config",function(){var i=new f();expect(i.getName()).toEqual("subClass");expect(i.getIsCool()).toEqual(true);expect(i.getHobbies()).toEqual(["sleeping","eating","movies"])});it("should apply with supplied config",function(){var i=new f({name:"newName",isCool:false,members:{aaron:"Aaron Conran"}});expect(i.getName()).toEqual("newName");expect(i.getIsCool()).toEqual(false);expect(i.getMembers().aaron).toEqual("Aaron Conran")})});describe("overriden methods",function(){it("should call self constructor",function(){var i=new f();expect(i.subConstrutorCalled).toBeTruthy()});it("should call parent constructor",function(){var i=new f();expect(i.parentConstructorCalled).toBeTruthy()});it("should call mixins constructors",function(){var i=new f();expect(i.mixinConstructor1Called).toBeTruthy();expect(i.mixinConstructor2Called).toBeTruthy()})});describe("alias",function(){it("should store alias",function(){expect(c.getByAlias("subclass")).toBe(f)});it("should store multiple aliases",function(){expect(c.getByAlias("parentclass")).toBe(e);expect(c.getByAlias("superclass")).toBe(e)})})});describe("instantiate",function(){beforeEach(function(){c.create("Test.stuff.Person",{alias:"person",constructor:function(e,d,f){this.name=e;this.age=d;this.sex=f},eat:function(d){this.eatenFood=d}});c.create("Test.stuff.Developer",{alias:"developer",extend:"Test.stuff.Person",constructor:function(g,e,d,f){this.isGeek=g;return this.superclass.constructor.apply(this,arguments)},code:function(d){this.languageCoded=d;this.eat("bugs")}})});it("should create the instance by full class name",function(){var d=c.instantiate("Test.stuff.Person","Jacky",24,"male");expect(d instanceof Test.stuff.Person).toBe(true)});it("should create the instance by alias",function(){var d=c.instantiateByAlias("person","Jacky",24,"male");expect(d instanceof Test.stuff.Person).toBe(true)});it("should pass all arguments to the constructor",function(){var d=c.instantiateByAlias("person","Jacky",24,"male");expect(d.name).toBe("Jacky");expect(d.age).toBe(24);expect(d.sex).toBe("male")});it("should have all methods in prototype",function(){var d=c.instantiateByAlias("person","Jacky",24,"male");d.eat("rice");expect(d.eatenFood).toBe("rice")});it("should works with inheritance",function(){var d=c.instantiateByAlias("developer",true,"Jacky",24,"male");d.code("javascript");expect(d.languageCoded).toBe("javascript");expect(d.eatenFood).toBe("bugs")})});describe("post-processors",function(){xdescribe("uses",function(){});describe("singleton",function(){it("should create the instance namespace and return the class",function(){var d=Ext.define("Something.Cool",{singleton:true,someMethod:function(){this.someMethodCalled=true},someProperty:"something"});expect(Something.Cool).toBeDefined();expect(Something.Cool instanceof d).toBeTruthy()})});describe("alias xtype",function(){it("should set xtype as a static class property",function(){var d=Ext.define("Something.Cool",{alias:"widget.cool"});expect(Something.Cool.xtype).toEqual("cool")})});describe("alternate",function(){it("should create the alternate with a string for alternateClassName property",function(){Ext.define("Something.Cool",{alternateClassName:"Something.CoolAsWell",someMethod:function(){this.someMethodCalled=true},someProperty:"something"});expect(Something.CoolAsWell).toBeDefined();expect(Something.CoolAsWell).toBe(Something.Cool)});it("should create the alternate with an array for alternateClassName property",function(){Ext.define("Something.Cool",{alternateClassName:["Something.CoolAsWell","Something.AlsoCool"]});expect(Something.CoolAsWell).toBe(Something.Cool);expect(Something.AlsoCool).toBe(Something.Cool)})})});describe("createNamespaces",function(){var d=window;it("should have an alias Ext.namespace",function(){spyOn(Ext.ClassManager,"createNamespaces");Ext.namespace("a","b","c");expect(Ext.ClassManager.createNamespaces).toHaveBeenCalledWith("a","b","c")});it("should create a single top level namespace",function(){Ext.ClassManager.createNamespaces("FooTest1");expect(d.FooTest1).toBeDefined();if(jasmine.browser.isIE6||jasmine.browser.isIE7||jasmine.browser.isIE8){d.FooTest1=undefined}else{delete d.FooTest1}});it("should create multiple top level namespace",function(){Ext.ClassManager.createNamespaces("FooTest2","FooTest3","FooTest4");expect(d.FooTest2).toBeDefined();expect(d.FooTest3).toBeDefined();expect(d.FooTest4).toBeDefined();if(jasmine.browser.isIE6||jasmine.browser.isIE7||jasmine.browser.isIE8){d.FooTest2=undefined;d.FooTest3=undefined;d.FooTest4=undefined}else{delete d.FooTest2;delete d.FooTest3;delete d.FooTest4}});it("should create a chain of namespaces, starting from a top level",function(){Ext.ClassManager.createNamespaces("FooTest5","FooTest5.ns1","FooTest5.ns1.ns2","FooTest5.ns1.ns2.ns3");expect(d.FooTest5).toBeDefined();expect(d.FooTest5.ns1).toBeDefined();expect(d.FooTest5.ns1.ns2).toBeDefined();expect(d.FooTest5.ns1.ns2.ns3).toBeDefined();if(jasmine.browser.isIE6||jasmine.browser.isIE7||jasmine.browser.isIE8){d.FooTest5=undefined}else{delete d.FooTest5}});it("should create lower level namespaces without first defining the top level",function(){Ext.ClassManager.createNamespaces("FooTest6.ns1","FooTest7.ns2");expect(d.FooTest6).toBeDefined();expect(d.FooTest6.ns1).toBeDefined();expect(d.FooTest7).toBeDefined();expect(d.FooTest7.ns2).toBeDefined();if(jasmine.browser.isIE6||jasmine.browser.isIE7||jasmine.browser.isIE8){d.FooTest6=undefined;d.FooTest7=undefined}else{delete d.FooTest6;delete d.FooTest7}});it("should create a lower level namespace without defining the middle level",function(){Ext.ClassManager.createNamespaces("FooTest8","FooTest8.ns1.ns2");expect(d.FooTest8).toBeDefined();expect(d.FooTest8.ns1).toBeDefined();expect(d.FooTest8.ns1.ns2).toBeDefined();if(jasmine.browser.isIE6||jasmine.browser.isIE7||jasmine.browser.isIE8){d.FooTest8=undefined}else{delete d.FooTest8}});it("should not overwritte existing namespace",function(){Ext.ClassManager.createNamespaces("FooTest9");FooTest9.prop1="foo";Ext.ClassManager.createNamespaces("FooTest9");expect(FooTest9.prop1).toEqual("foo");if(jasmine.browser.isIE6||jasmine.browser.isIE7||jasmine.browser.isIE8){d.FooTest9=undefined}else{delete d.FooTest9}})})});