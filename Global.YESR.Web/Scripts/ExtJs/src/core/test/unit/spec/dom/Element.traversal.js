describe("Ext.Element.traversal",function(){var g=Ext.Element,a,c,k,j,i,h,f,d,e,b;beforeEach(function(){c=Ext.getBody().createChild({id:"ExtElementHelper",cls:"wrapper",style:"position:absolute;",children:[{id:"child1",style:"position:absolute;"},{id:"child2",style:"position:absolute;"},{id:"child3",style:"position:absolute;"},{id:"child4",children:[{id:"child4_1",cls:"findIt",children:[{id:"child4_1_1"}]}]}]});j=Ext.getBody().createChild({id:"ExtElementInputHelper",tag:"input",type:"text"});a=new Ext.Element(Ext.getDom(c));k=new Ext.Element(Ext.getDom(j));i=Ext.get("child1");h=Ext.get("child2");f=Ext.get("child3");d=Ext.get("child4");e=Ext.get("child4_1");b=Ext.get("child4_1_1")});afterEach(function(){c.remove();j.remove()});describe("findParentNode",function(){it("should return document.body",function(){expect(a.findParentNode("body")).toEqual(document.body)});it("should return a dom",function(){expect(i.findParentNode(".wrapper")).toEqual(Ext.getDom(a))});it("should return an el",function(){expect(i.findParentNode(".wrapper",null,true)).toEqual(a)});describe("when maxDepth",function(){describe("1",function(){it("should not return the el",function(){expect(e.findParentNode(".wrapper",1)).toBeNull()})});describe("2",function(){it("should not return the el",function(){expect(e.findParentNode(".wrapper",2)).toEqual(Ext.getDom(a))})})})});describe("up",function(){it("should return Ext.getBody()",function(){expect(a.up("body")).toEqual(Ext.getBody())});it("should return a el",function(){expect(i.up(".wrapper")).toEqual(a)});describe("when maxDepth",function(){describe("1",function(){it("should not return the el",function(){expect(e.up(".wrapper",1)).toBeNull()})});describe("2",function(){it("should not return the el",function(){expect(e.up(".wrapper",2)).toEqual(a)})})})});describe("select",function(){it("should return an Ext.CompositeELementLite",function(){var l=a.select("div");expect(l).toBeDefined();expect(l.elements.length).toEqual(6);expect(l instanceof Ext.CompositeElementLite).toBe(true)})});describe("query",function(){it("should return elements",function(){var l=a.query("div");expect(l).toBeDefined();expect(l.length).toEqual(6);expect(l.isComposite).toBeFalsy();expect(Ext.isArray(l)).toBeTruthy()})});describe("down",function(){it("should return an el",function(){var l=a.down(".findIt");expect(l).toBeDefined();expect(Ext.isElement(l)).toBeFalsy()});it("should return a dom",function(){var l=a.down(".findIt",true);expect(l).toBeDefined();expect(Ext.isElement(l)).toBeTruthy()})});describe("child",function(){it("should return null",function(){var l=a.child(".findIt");expect(l).toBeNull()});it("should return an el",function(){var l=d.child(".findIt");expect(l).toBeDefined();expect(Ext.isElement(l)).toBeFalsy()});it("should return a dom",function(){var l=d.child(".findIt",true);expect(l).toBeDefined();expect(Ext.isElement(l)).toBeTruthy()})});describe("parent",function(){it("should return an el",function(){var l=i.parent();expect(l).toBeDefined();expect(l).toEqual(a);expect(Ext.isElement(l)).toBeFalsy()});it("should return a dom",function(){var l=i.parent(null,true);expect(l).toBeDefined();expect(l).toEqual(Ext.getDom(a));expect(Ext.isElement(l)).toBeTruthy()})});describe("next",function(){it("should return an el",function(){var l=i.next();expect(l).toBeDefined();expect(l).toEqual(h);expect(Ext.isElement(l)).toBeFalsy()});it("should return a dom",function(){var l=i.next(null,true);expect(l).toBeDefined();expect(l).toEqual(Ext.getDom(h));expect(Ext.isElement(l)).toBeTruthy()})});describe("prev",function(){it("should return an el",function(){var l=h.prev();expect(l).toBeDefined();expect(l).toEqual(i);expect(Ext.isElement(l)).toBeFalsy()});it("should return a dom",function(){var l=h.prev(null,true);expect(l).toBeDefined();expect(l).toEqual(Ext.getDom(i));expect(Ext.isElement(l)).toBeTruthy()})});describe("first",function(){it("should return an el",function(){var l=a.first();expect(l).toBeDefined();expect(l).toEqual(i);expect(Ext.isElement(l)).toBeFalsy()});it("should return a dom",function(){var l=a.first(null,true);expect(l).toBeDefined();expect(l).toEqual(Ext.getDom(i));expect(Ext.isElement(l)).toBeTruthy()})});describe("last",function(){it("should return an el",function(){var l=a.last();expect(l).toBeDefined();expect(l).toEqual(d);expect(Ext.isElement(l)).toBeFalsy()});it("should return a dom",function(){var l=a.last(null,true);expect(l).toBeDefined();expect(l).toEqual(Ext.getDom(d));expect(Ext.isElement(l)).toBeTruthy()})});describe("findParent",function(){it("should return document.body",function(){expect(a.findParent("body")).toEqual(document.body)});it("should return a dom",function(){expect(i.findParent(".wrapper")).toEqual(Ext.getDom(a))});it("should return an el",function(){expect(i.findParent(".wrapper",null,true)).toEqual(a)});describe("when maxDepth",function(){describe("1",function(){it("should not return the el",function(){expect(e.findParent(".wrapper",1)).toBeNull()})});describe("2",function(){it("should not return the el",function(){expect(e.findParent(".wrapper",2)).toBeNull()})});describe("3",function(){it("should return the el",function(){expect(e.findParent(".wrapper",3)).toEqual(Ext.getDom(a))})});describe("NaN",function(){it("should use Number.MAX_VALUE",function(){expect(e.findParent(".wrapper",Ext.getBody())).toEqual(Ext.getDom(a))})})})});describe("contains",function(){describe("contains",function(){it("should return false for siblings",function(){expect(Ext.fly(i).contains(b)).toBe(false);expect(Ext.fly(h).contains(b)).toBe(false)});it("should return true for parents",function(){expect(Ext.fly(e).contains(b)).toBe(true)});it("should return true for grandparents",function(){expect(Ext.fly(d).contains(b)).toBe(true)});it("should return true for self",function(){expect(Ext.fly(b).contains(b)).toBe(true)})});if(Ext.core.Element.prototype.isDescendent){describe("isDescendent",function(){it("should return false for grandchildren",function(){expect(Ext.fly(d).isDescendent(b)).toBe(false)});it("should return false for children",function(){expect(Ext.fly(e).isDescendent(b)).toBe(false)});it("should return false for siblings",function(){expect(Ext.fly(b).isDescendent(i)).toBe(false);expect(Ext.fly(b).isDescendent(h)).toBe(false)});it("should return true for parents",function(){expect(Ext.fly(b).isDescendent(e)).toBe(true)});it("should return true for grandparents",function(){expect(Ext.fly(b).isDescendent(d)).toBe(true)});it("should return true for self",function(){expect(Ext.fly(b).isDescendent(b)).toBe(true)})})}})},"/src/dom/Element.traversal.js");